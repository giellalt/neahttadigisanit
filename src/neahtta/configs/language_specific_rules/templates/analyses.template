{# This template is also rendered with each entry (i.e., `rendered_templates`),
   and has access to all of the main entry-specific template values.

   All that is relevant here is the `analyses` variable.

#}

{%- import "lexicon.macros" as macros with context -%}
{%- import "korp.macros" as korp with context -%}

{% macro render_etymologi_link(grouper) %}
  {% if _from == 'sme' or _from == 'SoMe'%}
    {% set lang_code = 45 %}
  {% elif _from == 'fin' %}
    {% set lang_code = 29 %}
  {% elif _from == 'sma' %}
    {% set lang_code = 41 %}
  {% elif _from == 'sms' %}
    {% set lang_code = 47 %}
  {% elif _from == 'smn' %}
    {% set lang_code = 46 %}
  {% elif _from == 'sje' %}
    {% set lang_code = 43 %}
  {% elif _from == 'izh' %}
    {% set lang_code = 30 %}
  {% elif _from == 'liv' %}
    {% set lang_code = 36 %}
  {% elif _from == 'myv' %}
    {% set lang_code = 60 %}
  {% elif _from == 'mjd' %}
    {% set lang_code = 61 %}
  {% elif _from == 'mhr' %}
    {% set lang_code = 62 %}
  {% elif _from == 'mrj' %}
    {% set lang_code = 63 %}
  {% elif _from == 'kom' %}
    {% set lang_code = 20 %}
  {% elif _from == 'udm' %}
    {% set lang_code = 21 %}
  {% elif _from == 'yrk' %}
    {% set lang_code = 3 %}
  {% endif %}

  {% if current_locale == 'sme' or current_locale == 'SoMe' or current_locale == 'smn' %}
    {% set locale_code = 'sa' %}
  {% elif current_locale == 'nob' or  current_locale == 'eng' or current_locale == 'rus' or current_locale == 'sma' %}
    {% set locale_code = 'en' %}
  {% elif current_locale == 'fin' or current_locale == 'sms' %}
    {% set locale_code = 'fi' %}
  {% endif %}

  {% if lang_code %}
    <a href="http://kaino.kotus.fi/algu/index.php?t=haku&o=hae&l=1&valinta=1&valintaryhma=1&kieli={{lang_code}}&hakusana={{grouper}}&kkieli={{locale_code}}">{% trans %}Word history{% endtrans %} &rarr;</a>
  {% endif %}
{% endmacro %}

<dl class="possible_analyses grid_analyses">
    {% for grouper, forms in analyses_right|groupby('lemma') %}
        {% for lemmagroup, lemmafs in forms|groupby('pos') %}
            {% if current_pair_settings.show_korp_search %}
                {% if 'Der' in grouper %}
                  <dt><span lang="{{ _from }}">{{ grouper }}</span></dt>
                {% else %}
                  {% if lemmagroup and grouper %}
                    {% if korp_hits > 0 %}
                      <dt><span lang="{{ _from }}">{{ grouper }}</span>
                        <span class="etymology">{{render_etymologi_link(grouper)}}</span> {{ korp.link_lemma(grouper) }}</dt>
                    {% else %}
                      <dt><span lang="{{ _from }}">{{ grouper }}</span>
                        <span class="etymology">{{render_etymologi_link(grouper)}}</span>
                        <span class="not_found">{% trans %} (Not found in our corpus){% endtrans %}</span></dt>
                    {% endif %}
                  {% else %}
                      <dt><span lang="{{ _from }}">{{ grouper }}</span>
                      <span class="etymology">{{render_etymologi_link(grouper)}}</span></dt>
                  {% endif %}
                {% endif %}
            {% else %}
                <dt><span lang="{{ _from }}">{{ grouper }}</span>
                  <span class="etymology">{{render_etymologi_link(grouper)}}</span>
                  <span class="not_found">{% trans %} (No corpus available){% endtrans %}</span></dt>
            {% endif %}
            <dd>
                <ul class="possible_forms">
                    {% set existing_tags = [] %}
                    {% for lem in lemmafs %}
                    {% set formatted_tag = ' '.join(lem.tag)|tagfilter(_from, _to) %}
                    {% if formatted_tag not in existing_tags %}
                        <li>{{ formatted_tag }}</li>
                        {% do existing_tags.append(formatted_tag) %}
                    {% endif %}
                    {% endfor %}
                </ul>
            </dd>
        {% endfor %}
    {% endfor %}
</dl>

{# vim: set ts=4 sw=4 tw=72 syntax=htmljinja : #}

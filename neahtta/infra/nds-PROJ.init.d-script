#!/bin/bash
# nds-sanit     Manage NDS processes for Sanit.
# chkconfig:    2345 95 20
# description:  python/fastcgi processes for NDS-sanit
# processname:  nds-sanit-gunicorn
### BEGIN INIT INFO
# Provides:          nds-sanit-gunicorn
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: python/fastcgi processes for NDS-sanit
### END INIT INFO


# source function library
. /etc/init.d/functions

PROJNAME='nds-sanit/gunicorn'
ADDRESS='127.0.0.1'
SERVER_PORT='2347'

# NB: don't forget to change pidfile if copying this for a new config.
SERVER_PID="/home/neahtta/neahtta/sanit-pidfile.pid"

# Project's virtualenv
ENVLOC="/home/neahtta/neahtta_env"
PROJECTLOC="/home/neahtta/neahtta"

# Config file associated with the instance

NDS_CONFIG="$PROJECTLOC/configs/sanit.config.yaml"

# Important to preload, otherwise each worker will use several hundred megabytes of RAM
BASE_CMD="$ENVLOC/bin/gunicorn --preload --bind $ADDRESS:$SERVER_PORT --pid $SERVER_PID -n nds-sanit --workers 6 --daemon neahtta:app"

RETVAL=0

start_server () {
  if [ -f $1 ]; then
    #pid exists, check if running
    if [ "$(ps -p `cat $1` | wc -l)" -gt 1 ]; then
        action $"Starting $PROJNAME -- ${ADDRESS}:${2}..." /bin/false
       echo -n " * Server already running on ${ADDRESS}:${2}"
       return
    fi
  fi
  cd $PROJECTLOC
  . $ENVLOC/bin/activate
  export NDS_CONFIG=$NDS_CONFIG
  $BASE_CMD && success || failure
  RETVAL=$?
  echo -n $"Starting $PROJNAME -- ${ADDRESS}:${2}..." $?
  echo
}

restart_server () {
  PID=`cat $1`
  kill -1 $PID
  action $"Sending SIGHUP to $PROJNAME -- ${ADDRESS}:${2}..." /bin/true
}

stop_server (){
  if [ -f $1 ] && [ "$(ps -p `cat $1` | wc -l)" -gt 1 ]; then
    kill `cat $1`
    rm $1
    export NDS_CONFIG=''
    action $"Stopping $PROJNAME -- ${ADDRESS}:${2}..." /bin/true
  else
    action $"Stopping $PROJNAME -- ${ADDRESS}:${2}..." /bin/false
    if [ -f $1 ]; then
      echo -n " * Server ${ADDRESS}:${2} not running"
    else
      echo -n " * No pid file found for server ${ADDRESS}:${2}"
    fi
  fi
}

case "$1" in
'start')
  start_server $SERVER_PID $SERVER_PORT
  ;;
'stop')
  stop_server $SERVER_PID $SERVER_PORT
  ;;
'restart')
  stop_server $SERVER_PID $SERVER_PORT
  sleep 3
  start_server $SERVER_PID $SERVER_PORT
  ;;
*)
  echo -n "Usage: $0 { start | stop | restart }"
  ;;
esac

exit $RETVAL

